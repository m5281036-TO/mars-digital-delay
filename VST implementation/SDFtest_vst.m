classdef SDFtest_vst < audioPlugin
    properties
        SpectralDelay = true; % effect on/off
        F1_Freq = 500; F2_Freq = 2000; % (Hz)
        F1_SoS = 340; F2_SoS = 500; % speed of sound (m/s)
        Distance = 1 %(m)
        DelayMode = 'Linear';
    end
    properties (Constant)
        PluginInterface = audioPluginInterface( ...
            audioPluginParameter('F1_SoS', ...
            'DisplayName', 'F1 Speed of Sound', ...
            'Label', 'm/s', ...
            'Mapping',{'lin',120,680}, ...
            'Style','vslider',...
            'Layout',[1,1]), ...
            audioPluginParameter('F2_SoS', ...
            'DisplayName', 'F2 Speed of Sound', ...
            'Label', 'm/s', ...
            'Mapping',{'lin',120,680}, ...
            'Style','vslider',...
            'Layout',[1,2]), ...
            audioPluginParameter('F1_Freq', ...
            'DisplayName', 'F1 Freq.', ...
            'Label', 'Hz', ...
            'Mapping',{'log',20,19000}, ...
            'Style','rotaryknob', ...
            'Layout',[3,1]), ...
            audioPluginParameter('F2_Freq', ...
            'DisplayName', 'F2 Freq.', ...
            'Label', 'Hz', ...
            'Mapping',{'log',20,19000}, ...
            'Style','rotaryknob', ...
            'Layout',[3,2]), ...
            audioPluginParameter('Distance', ...
            'DisplayName', 'Distance', ...
            'Label', 'm', ...
            'Mapping',{'log',1,5000}, ...
            'Style','vslider', ...
            'Layout',[1,4]), ...
            audioPluginParameter('DelayMode', ...
            'DisplayName', 'Delay Mode', ...
            'Mapping',{'enum','Linear', 'Logarithmic', 'Sigmoid', 'Stepwise'}, ...
            'Layout',[1,5]), ...
            audioPluginParameter('SpectralDelay', ...
            'Style','vtoggle', ...
            'Layout',[3,4;3,5]), ...
            audioPluginGridLayout( ...
            'RowHeight',[250,40,150,40,250,40], ...
            'ColumnWidth',[140,140,40,140,140]) ...
            );
    end
    % contructor
    methods
        function out = process(plugin,in)
            out = in*plugin.Distance;
        end
    end
end